<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.vacation.dao.VacationMapper">
	<resultMap type="VacationVO" id="vacationMap">
		<result property="requestId" column="request_id" />
		<result property="empId" column="emp_id" />
		<result property="vacationType" column="vacation_type" />
		<result property="startDate" column="start_date" />
		<result property="endDate" column="end_date" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="totalDays" column="total_days" />
		<result property="requestDate" column="request_date" />
		<result property="updatedAt" column="updated_at" />
	</resultMap>

	<!-- 휴가 등록 -->
	<insert id="insertVacation"
		parameterType="kr.spring.vacation.vo.VacationVO">
		INSERT INTO vacation_request (
		request_id,
		emp_id,
		vacation_type,
		start_date,
		end_date,
		start_time,
		end_time,
		total_days,
		reason,
		status,
		request_date,
		created_at,
		updated_at
		)
		VALUES (
		vacation_request_seq.NEXTVAL,
		#{empId},
		#{vacationType},
		#{startDate, jdbcType=VARCHAR},
		#{endDate, jdbcType=VARCHAR},
		#{startTime, jdbcType=VARCHAR},
		#{endTime, jdbcType=VARCHAR},
		#{totalDays},
		#{reason, jdbcType=VARCHAR},
		NVL(#{status, jdbcType=VARCHAR}, 'approved'),  <!-- approved: 승인상태로 -->
		SYSDATE,
		SYSDATE,
		SYSDATE
		)
	</insert>

	<!-- 휴가 목록 상세 -->
	<select id = "selectVacationDetail" parameterType="long" resultMap="vacationMap">
		SELECT * 
		FROM vacation_request 
		WHERE request_id = #{requestId}
	</select> 
	
	<!-- 조회/ 조건 목록 -->
	<sql id="vacationSearch">
		<if test="startDate != null and startDate != ''">
			AND start_date <![CDATA[ >= ]]>
			#{startDate}
		</if>
		<if test="endDate != null and endDate != ''">
			AND end_date <![CDATA[ <= ]]>
			#{endDate}
		</if>
		<if test="vacationType != null and vacationType != ''">
			AND vacation_type = #{vacationType}
		</if>
	</sql>
	
	<!-- 조회/조건 -->
	<select id ="selectList" parameterType="map" resultMap="vacationMap">
		SELECT *
		FROM vacation_request
		WHERE emp_id=#{empId}
	<include refid="vacationSearch"/>
	</select>
	
	<!-- 휴가 목록 -->
	<select id="selectVacationList" parameterType="map" resultMap="vacationMap">
		SELECT *
		FROM vacation_request
		WHERE emp_id=#{empId}
	</select>
	
	<!-- selectTotalVacationDays, selectUsedVacationDays, selectRemainingVacationDays -->
	<!-- 휴가 일수 계산 -->
	<insert id ="insertVacationBalance" parameterType="kr.spring.vacation.vo.VacationBalanceVO">
	INSERT INTO vacation_balance (
		balance_id,
		emp_id,
		year,
		vacation_type,
		total_days,
		used_days,
		remaining_days,
		carry_over_days,
		created_at,
		updated_at
	) VALUES (
	    vacation_balance_seq.NEXTVAL,
	    #{empId},
	    #{year},
	    #{vacationType},
	    #{totalDays},
	    #{used_days},
	    #{remainingDays},
	    #{carryOverDays},
	    SYSDATE,
	    SYSDATE
	)
	</insert>
	
	<!-- 휴가 통계 확인 -->
	<select id="selectVacationSummary" parameterType="long" resultType="kr.spring.vacation.vo.VacationBalanceVO">
	SELECT 
		#{empId} as empId,
		COALESCE(SUM(CASE WHEN vacation_type='annual' AND status = 'approved' THEN total_days ELSE 0 END),0) AS usedAnnual,
		COALESCE(SUM(CASE WHEN vacation_type='half' AND status = 'approved' THEN total_days ELSE 0 END),0) AS usedHalf,
		COALESCE(SUM(CASE WHEN vacation_type='special' AND status = 'approved' THEN total_days ELSE 0 END),0) AS usedSpecial
		FROM vacation_request
		WHERE emp_id = #{empId}
	</select>
	
	
	
	
	</mapper>