<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="kr.spring.member.dao.MemberMapper">
	<!-- 회원 가입 -->
	<insert id="insertMemberDetail" parameterType="memberVO">
		INSERT INTO spmember_detail (
		  mem_num,
		  name,
		  passwd,
		  phone,
		  email,
		  zipcode,
		  address1,
		  address2)
		VALUES (
		  #{mem_num},
		  #{name},
		  #{passwd},
		  #{phone},
		  #{email},
		  #{zipcode},
		  #{address1},
		  #{address2})
	</insert>
	
	<!-- 아이디 및 닉네임 중복 체크 -->
	<select id="selectIdAndNickName" parameterType="map" resultType="memberVO">
		SELECT 
		  * 
		FROM spmember
		WHERE
		<if test="id != null and id != ''">
			id = #{id}
		</if>
		<if test="nick_name != null and nick_name != ''">
			nick_name = #{nick_name}
		</if>
	</select>
	
	<!-- 로그인 처리 -->
	<select id="selectCheckMember" parameterType="string" resultType="memberVO">
		SELECT
		  user_num,
		  employee_code,
		  authority,
		  passwd,
		  email
		FROM euser JOIN euser_detail
		USING (user_num)
		WHERE employee_code=#{employee_code}
	</select>
	
	<!-- 회원정보수정 -->
	<update id="updateMemberDetail" parameterType="memberVO">
		UPDATE euser_detail
		SET
		  phone=#{phone},
		  email=#{email},
		  extension_num=#{extension_num}
		WHERE user_num=#{user_num}
	</update>
	
	<!-- 회원목록 처리 -->
	<!-- sql 태그와 include 태그를 이용해서 SQL문을 재사용 -->
	<sql id="memberSearch">
		<where>
			<if test="keyword != null and keyword != ''">
				<if test="keyfield==1">
					m.id LIKE '%' || #{keyword} || '%' OR
					m.nick_name LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==2">
					d.name LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==3">
					d.email LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==4">
					m.id LIKE '%' || #{keyword} || '%' OR
					m.nick_name LIKE '%' || #{keyword} || '%' OR
					d.name LIKE '%' || #{keyword} || '%' OR
					d.email LIKE '%' || #{keyword} || '%'
				</if>
			</if>
		</where>
	</sql>
	
	<!-- 전체/검색 레코드 수 -->
	<select id="selectRowCount" parameterType="map" resultType="integer">
		SELECT
		  COUNT(*)
		FROM spmember m LEFT OUTER JOIN spmember_detail d
		ON m.mem_num = d.mem_num
		<include refid="memberSearch"/>
	</select>
	
	<!-- 전체 검색 목록 -->
	<select id="selectList" parameterType="map" resultType="memberVO">
		SELECT
		  *
		FROM (SELECT
				a.*,
				rownum rnum
			  FROM (SELECT
			  		 *
			  		FROM spmember m LEFT OUTER JOIN
			  		     spmember_detail d
			  		ON m.mem_num = d.mem_num
			  		<include refid="memberSearch"/>
			  		ORDER BY d.reg_date DESC NULLS LAST)a)
	<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
	]]>
	</select>
	<!-- 채팅방 멤버 추가용 회원 목록 조회 -->
	<select id="selectMemberList" parameterType="map" resultType="memberVO">
		SELECT
		  u.user_num,
          u.employee_code,
    	  u.authority,
    	  d.user_name,
    	  d.email,
   	      d.phone,
   	   	  d.department_num,
      	  d.position_num,
   	      d.grade_num
    	FROM euser u 
    	JOIN euser_detail d
    	ON u.user_num = d.user_num
	</select>
	

</mapper>


































